/*MIXINS*/

@use "sass:math";

@import "../__iconfont/iconfont-variables";

// ClearFix mixin
@mixin cf {
	&::before,
	&::after {
		content: "";
		display: table;
	}

	&::after {
		clear: both;
	}
}
// Mixin for VW size pixels declaration on specific breakpoint vw-size(16px, 1200) - 16px on 1200 width breakpoint
@function vw-size($s, $w: 1440) {
	@return math.div($s, $w) * 100 + vw;
}

@function rem($sizeValue: 16) {
	@return math.div($sizeValue, 16) + rem;
}

@function rel($size, $rel) {
	@return math.div($size, $rel);
}

@function em($size, $rel: $font-size-base) {
	@return rel($size, $rel) * 1em;
}

@mixin font(
	$fontSize: $font-size-base,
	$lineHeight: $line-height-base,
	$fontWeight: false,
	$letterSpacing: false,
	$fontStyle: false,
	$fontFamily: false
) {
	font-size: rem($fontSize);
	line-height: rel($lineHeight, $fontSize);

	@if $fontFamily {
		font-family: $fontFamily;
	}

	@if $letterSpacing {
		letter-spacing: rem($letterSpacing);
	}

	@if $fontWeight {
		font-weight: $fontWeight;
	}

	@if $fontStyle {
		font-style: $fontStyle;
	}
}

@mixin font-px($fontSize, $lineHeight) {
	font-size: $fontSize * 1px;
	line-height: rel($lineHeight, $fontSize);
}

// Detect ie11
@mixin ie11() {
	@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
		@content;
	}
}

// Detect firefox
@mixin firefox() {
	@-moz-document url-prefix() {
		@content;
	}
}

// Detect Safari
@mixin safari() {
	@media screen and (-webkit-min-device-pixel-ratio: 0) {
		@content;
	}
}


// Set block width to be the same as container
@mixin block-container-width() {
	width: 100%;
	max-width: map_get($container-max-widths, sm);
	padding: 0 rem(16);

	@include media(">=lg") {
		max-width: map_get($container-max-widths, lg);
	}

	@include media(">=xl") {
		max-width: map_get($container-max-widths, xl);
	}

	@include media(">=xxl") {
		max-width: map_get($container-max-widths, xxl);
	}

	&.alignwide {
		@include media(">=xxxl") {
			max-width: map_get($container-max-widths, xxxl);
		}

		@include media(">=max") {
			max-width: map_get($container-max-widths, max);
		}
	}

	&.alignfull {
		max-width: 100%;
	}
}

// Reset global anchor color and hover
@mixin reset-global-a($color: $text-color-base, $hover: $text-color-base) {
	color: $color;

	&:hover {
		color: $hover;
	}
}

// Force gpu acceleration
@mixin force-gpu-acc($perspective: false) {
	-webkit-backface-visibility: hidden;
	backface-visibility: hidden;
	-webkit-transform-style: preserve-3d;
	transform-style: preserve-3d;

	@if $perspective {
		-webkit-perspective: 1000;
		perspective: 1000;
	}
}

@mixin placeholder() {
	&::-webkit-input-placeholder {
		@content;
	}
	&:-moz-placeholder {

		/* Firefox 18- */
		@content;
	}
	&::-moz-placeholder {
		opacity: 1;

		/* Firefox 19+ */
		@content;
	}
	&:-ms-input-placeholder {

		/* IE 10+ */
		@content;
	}
	&::-ms-input-placeholder {

		/* Edge */
		@content;
	}
	&:placeholder-shown {

		/* Standard one last! */
		@content;
	}
}

@mixin placeholder-color($color) {
	&::-webkit-input-placeholder {
		color: $color;
	}
	&:-moz-placeholder {

		/* Firefox 18- */
		color: $color;
	}
	&::-moz-placeholder {

		/* Firefox 19+ */
		color: $color;
		opacity: 1;
	}
	&:-ms-input-placeholder {

		/* IE 10+ */
		color: $color;
	}
	&::-ms-input-placeholder {

		/* Edge */
		color: $color;
	}
	&:placeholder-shown {

		/* Standard one last! */
		color: $color;
	}
}

@mixin object-fit-cover() {
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	left: 0;
	object-fit: cover;
}

@mixin responsive-grid($sm: 12, $md: 12, $lg: 12, $xl: 12, $xxl: 12) {
	width: calc(var(--columnWidth) * #{$sm} - #{$container-padding-mobile * 2}px);
	max-width: calc(var(--columnMaxWidth) * #{$sm} - #{$container-padding-mobile * 2}px);

	@include media(">=md") {
		width: calc(var(--columnWidth) * #{$md} - #{$container-padding-mobile * 2}px);
		max-width: calc(var(--columnMaxWidth) * #{$md} - #{$container-padding-mobile * 2}px);
	}

	@include media(">=lg") {
		width: calc(var(--columnWidth) * #{$lg} - #{$container-padding-desktop * 2}px);
		max-width: calc(var(--columnMaxWidth) * #{$lg} - #{$container-padding-desktop * 2}px);
	}

	@if ($lg !=$md) {
		@include media(">=lg") {
			width: calc(var(--columnWidth) * #{$lg} - #{$container-padding-desktop * 2}px);
			max-width: calc(var(--columnMaxWidth) * #{$lg} - #{$container-padding-desktop * 2}px);
		}
	}

	@if ($xl !=$lg) {
		@include media(">=xl") {
			width: calc(var(--columnWidth) * #{$xl} - #{$container-padding-desktop * 2}px);
			max-width: calc(var(--columnMaxWidth) * #{$xl} - #{$container-padding-desktop * 2}px);
		}
	}

	@if ($xxl !=$xl) {
		@include media(">=xxl") {
			width: calc(var(--columnWidth) * #{$xxl} - #{$container-padding-desktop * 2}px);
			max-width: calc(var(--columnMaxWidth) * #{$xxl} - #{$container-padding-desktop * 2}px);
		}
	}
}

@mixin icon-font($content: "", $font-size: 24px) {
	content: $content;
	font-family: $font-iconfont;
	font-size: $font-size;
	font-weight: 700;
	font-style: normal;
	font-variant: normal;
	line-height: 1;
	text-transform: none;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}
